import { callApi } from "@bot/helpers";
import { MenuTemplate } from "telegraf-inline-menu/dist/source";
import { BotContext } from "../types";
import productsMenu from "./product";

const mainMenu = new MenuTemplate<BotContext>(() => "üòÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —è –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è FrozenShop.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.");

mainMenu.submenu("üì¶ –¢–æ–≤–∞—Ä—ã", "products-menu", productsMenu);

mainMenu.interact("üíé –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "stats-menu", {
    async do() { return true },
    joinLastRow: true
});

mainMenu.interact("üßæ –ó–∞–∫–∞–∑—ã", "orders-menu", {
    async do(context) {
        const response = await callApi("/api/order.get");

        if (response.error) {
            await context.reply("üìõ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: " + response.error.message);
        }

        const orders = response.payload;

        if (orders.length < 1) {
            await context.reply("üì™ –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –ø—É—Å—Ç.");
            return false;
        }

        let message = `üì¶ –ó–∞–∫–∞–∑—ã (${orders.length}):\n\n`;
        
        const addRow = (name: string, value: any) => (`\t${name}: <i>${value}</i>\n`);

        for (let order of orders) {
            let chunk = `<b>–ó–∞–∫–∞–∑ "${order._id}"</b>\n`;

            let username = order.user.full_name || order.user.login
            let date = new Date(order.date).toLocaleString();
            let price = isNaN(order.price) ? order.price.$numberDecimal : order.price;
            
            chunk += addRow("–ö–ª–∏–µ–Ω—Ç", username);
            chunk += addRow("–í—Ä–µ–º—è", date);
            chunk += addRow("–ö–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–æ–≤", order.products.length);
            chunk += addRow("–¶–µ–Ω–∞", Number(price).toLocaleString("ru") + " —Ä—É–±.");
            
            message += chunk + "\n";
        }

        await context.reply(message, {
            parse_mode: "HTML"
        });
        return true
    }
});

mainMenu.interact("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ö–ª–∏–µ–Ω—Ç—ã", "clients-menu", {
    async do() { return true },
    joinLastRow: true
});

export default mainMenu;